<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class LaunchpadPresetTheme extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $themeId;
    /**
     * @var string
     */
    protected $displayName;
    /**
     * @var string
     */
    protected $background;
    /**
     * @var string
     */
    protected $launchpadTextColor;
    /**
     * @var string
     */
    protected $descriptionColor;
    /**
     * @var string
     */
    protected $avatarBackground;
    /**
     * @var string
     */
    protected $buttonTextColor;
    /**
     * @var string
     */
    protected $buttonBackground;
    /**
     * @var bool
     */
    protected $isActive;
    /**
     * @var string
     */
    protected $layout;
    /**
     * @var string
     */
    protected $iconGradient;

    public function getThemeId(): int
    {
        return $this->themeId;
    }

    public function setThemeId(int $themeId): self
    {
        $this->initialized['themeId'] = true;
        $this->themeId = $themeId;

        return $this;
    }

    public function getDisplayName(): string
    {
        return $this->displayName;
    }

    public function setDisplayName(string $displayName): self
    {
        $this->initialized['displayName'] = true;
        $this->displayName = $displayName;

        return $this;
    }

    public function getBackground(): string
    {
        return $this->background;
    }

    public function setBackground(string $background): self
    {
        $this->initialized['background'] = true;
        $this->background = $background;

        return $this;
    }

    public function getLaunchpadTextColor(): string
    {
        return $this->launchpadTextColor;
    }

    public function setLaunchpadTextColor(string $launchpadTextColor): self
    {
        $this->initialized['launchpadTextColor'] = true;
        $this->launchpadTextColor = $launchpadTextColor;

        return $this;
    }

    public function getDescriptionColor(): string
    {
        return $this->descriptionColor;
    }

    public function setDescriptionColor(string $descriptionColor): self
    {
        $this->initialized['descriptionColor'] = true;
        $this->descriptionColor = $descriptionColor;

        return $this;
    }

    public function getAvatarBackground(): string
    {
        return $this->avatarBackground;
    }

    public function setAvatarBackground(string $avatarBackground): self
    {
        $this->initialized['avatarBackground'] = true;
        $this->avatarBackground = $avatarBackground;

        return $this;
    }

    public function getButtonTextColor(): string
    {
        return $this->buttonTextColor;
    }

    public function setButtonTextColor(string $buttonTextColor): self
    {
        $this->initialized['buttonTextColor'] = true;
        $this->buttonTextColor = $buttonTextColor;

        return $this;
    }

    public function getButtonBackground(): string
    {
        return $this->buttonBackground;
    }

    public function setButtonBackground(string $buttonBackground): self
    {
        $this->initialized['buttonBackground'] = true;
        $this->buttonBackground = $buttonBackground;

        return $this;
    }

    public function getIsActive(): bool
    {
        return $this->isActive;
    }

    public function setIsActive(bool $isActive): self
    {
        $this->initialized['isActive'] = true;
        $this->isActive = $isActive;

        return $this;
    }

    public function getLayout(): string
    {
        return $this->layout;
    }

    public function setLayout(string $layout): self
    {
        $this->initialized['layout'] = true;
        $this->layout = $layout;

        return $this;
    }

    public function getIconGradient(): string
    {
        return $this->iconGradient;
    }

    public function setIconGradient(string $iconGradient): self
    {
        $this->initialized['iconGradient'] = true;
        $this->iconGradient = $iconGradient;

        return $this;
    }
}
