<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class PublicQrCode extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The QR code's id, as a guid.
     *
     * @var string
     */
    protected $id;
    /**
     * @var string
     */
    protected $groupGuid;
    /**
     * The destination URL.
     *
     * @var string
     */
    protected $longUrl;
    /**
     * A boolean representing if the QR code has been archived.
     *
     * @var bool
     */
    protected $archived;
    /**
     * ISO_TIMESTAMP.
     *
     * @var string
     */
    protected $createdAt;
    /**
     * @var string
     */
    protected $createdBy;
    /**
     * @var string
     */
    protected $clientId;
    /**
     * @var bool
     */
    protected $isDeleted;
    /**
     * The QR code's image data as a data uri.
     *
     * @var string
     */
    protected $image;
    /**
     * Options for customizing a QR Code's appearance.
     *
     * @var QRCodeCustomizations
     */
    protected $renderCustomizations;

    /**
     * The QR code's id, as a guid.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * The QR code's id, as a guid.
     */
    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getGroupGuid(): string
    {
        return $this->groupGuid;
    }

    public function setGroupGuid(string $groupGuid): self
    {
        $this->initialized['groupGuid'] = true;
        $this->groupGuid = $groupGuid;

        return $this;
    }

    /**
     * The destination URL.
     */
    public function getLongUrl(): string
    {
        return $this->longUrl;
    }

    /**
     * The destination URL.
     */
    public function setLongUrl(string $longUrl): self
    {
        $this->initialized['longUrl'] = true;
        $this->longUrl = $longUrl;

        return $this;
    }

    /**
     * A boolean representing if the QR code has been archived.
     */
    public function getArchived(): bool
    {
        return $this->archived;
    }

    /**
     * A boolean representing if the QR code has been archived.
     */
    public function setArchived(bool $archived): self
    {
        $this->initialized['archived'] = true;
        $this->archived = $archived;

        return $this;
    }

    /**
     * ISO_TIMESTAMP.
     */
    public function getCreatedAt(): string
    {
        return $this->createdAt;
    }

    /**
     * ISO_TIMESTAMP.
     */
    public function setCreatedAt(string $createdAt): self
    {
        $this->initialized['createdAt'] = true;
        $this->createdAt = $createdAt;

        return $this;
    }

    public function getCreatedBy(): string
    {
        return $this->createdBy;
    }

    public function setCreatedBy(string $createdBy): self
    {
        $this->initialized['createdBy'] = true;
        $this->createdBy = $createdBy;

        return $this;
    }

    public function getClientId(): string
    {
        return $this->clientId;
    }

    public function setClientId(string $clientId): self
    {
        $this->initialized['clientId'] = true;
        $this->clientId = $clientId;

        return $this;
    }

    public function getIsDeleted(): bool
    {
        return $this->isDeleted;
    }

    public function setIsDeleted(bool $isDeleted): self
    {
        $this->initialized['isDeleted'] = true;
        $this->isDeleted = $isDeleted;

        return $this;
    }

    /**
     * The QR code's image data as a data uri.
     */
    public function getImage(): string
    {
        return $this->image;
    }

    /**
     * The QR code's image data as a data uri.
     */
    public function setImage(string $image): self
    {
        $this->initialized['image'] = true;
        $this->image = $image;

        return $this;
    }

    /**
     * Options for customizing a QR Code's appearance.
     */
    public function getRenderCustomizations(): QRCodeCustomizations
    {
        return $this->renderCustomizations;
    }

    /**
     * Options for customizing a QR Code's appearance.
     */
    public function setRenderCustomizations(QRCodeCustomizations $renderCustomizations): self
    {
        $this->initialized['renderCustomizations'] = true;
        $this->renderCustomizations = $renderCustomizations;

        return $this;
    }
}
