<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class FullShorten extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * URL to be shortened. Required when creating new bitlinks. Cannot be used with bitlink_id.
     *
     * @var string
     */
    protected $longUrl;
    /**
     * @var string
     */
    protected $domain = 'bit.ly';
    /**
     * Always include a specific group and custom domain in your shorten calls.
     *
     * @var string
     */
    protected $groupGuid;
    /**
     * @var string
     */
    protected $title;
    /**
     * @var list<string>
     */
    protected $tags;
    /**
     * @var list<Deeplink>
     */
    protected $deeplinks;
    /**
     * @var bool
     */
    protected $forceNewLink;
    /**
     * Custom keyword for creating keyword overrides. If provided, creates an override at domain/keyword. Cannot use bit.ly domain.
     *
     * @var string
     */
    protected $keyword;
    /**
     * Existing bitlink ID to add a keyword override to. Format: domain/hash. Cannot be used with long_url. Cannot use bit.ly domain.
     *
     * @var string
     */
    protected $bitlinkId;

    /**
     * URL to be shortened. Required when creating new bitlinks. Cannot be used with bitlink_id.
     */
    public function getLongUrl(): string
    {
        return $this->longUrl;
    }

    /**
     * URL to be shortened. Required when creating new bitlinks. Cannot be used with bitlink_id.
     */
    public function setLongUrl(string $longUrl): self
    {
        $this->initialized['longUrl'] = true;
        $this->longUrl = $longUrl;

        return $this;
    }

    public function getDomain(): string
    {
        return $this->domain;
    }

    public function setDomain(string $domain): self
    {
        $this->initialized['domain'] = true;
        $this->domain = $domain;

        return $this;
    }

    /**
     * Always include a specific group and custom domain in your shorten calls.
     */
    public function getGroupGuid(): string
    {
        return $this->groupGuid;
    }

    /**
     * Always include a specific group and custom domain in your shorten calls.
     */
    public function setGroupGuid(string $groupGuid): self
    {
        $this->initialized['groupGuid'] = true;
        $this->groupGuid = $groupGuid;

        return $this;
    }

    public function getTitle(): string
    {
        return $this->title;
    }

    public function setTitle(string $title): self
    {
        $this->initialized['title'] = true;
        $this->title = $title;

        return $this;
    }

    /**
     * @return list<string>
     */
    public function getTags(): array
    {
        return $this->tags;
    }

    /**
     * @param list<string> $tags
     */
    public function setTags(array $tags): self
    {
        $this->initialized['tags'] = true;
        $this->tags = $tags;

        return $this;
    }

    /**
     * @return list<Deeplink>
     */
    public function getDeeplinks(): array
    {
        return $this->deeplinks;
    }

    /**
     * @param list<Deeplink> $deeplinks
     */
    public function setDeeplinks(array $deeplinks): self
    {
        $this->initialized['deeplinks'] = true;
        $this->deeplinks = $deeplinks;

        return $this;
    }

    public function getForceNewLink(): bool
    {
        return $this->forceNewLink;
    }

    public function setForceNewLink(bool $forceNewLink): self
    {
        $this->initialized['forceNewLink'] = true;
        $this->forceNewLink = $forceNewLink;

        return $this;
    }

    /**
     * Custom keyword for creating keyword overrides. If provided, creates an override at domain/keyword. Cannot use bit.ly domain.
     */
    public function getKeyword(): string
    {
        return $this->keyword;
    }

    /**
     * Custom keyword for creating keyword overrides. If provided, creates an override at domain/keyword. Cannot use bit.ly domain.
     */
    public function setKeyword(string $keyword): self
    {
        $this->initialized['keyword'] = true;
        $this->keyword = $keyword;

        return $this;
    }

    /**
     * Existing bitlink ID to add a keyword override to. Format: domain/hash. Cannot be used with long_url. Cannot use bit.ly domain.
     */
    public function getBitlinkId(): string
    {
        return $this->bitlinkId;
    }

    /**
     * Existing bitlink ID to add a keyword override to. Format: domain/hash. Cannot be used with long_url. Cannot use bit.ly domain.
     */
    public function setBitlinkId(string $bitlinkId): self
    {
        $this->initialized['bitlinkId'] = true;
        $this->bitlinkId = $bitlinkId;

        return $this;
    }
}
