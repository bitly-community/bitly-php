<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class ConsumableFeatureFull extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * ISO_TIMESTAMP.
     *
     * @var string
     */
    protected $created;
    /**
     * ISO_TIMESTAMP.
     *
     * @var string
     */
    protected $modified;
    /**
     * @var string
     */
    protected $id;
    /**
     * @var string
     */
    protected $name;
    /**
     * @var int
     */
    protected $limit;
    /**
     * @var bool
     */
    protected $isTierDefault;
    /**
     * @var bool
     */
    protected $isEnforced;
    /**
     * @var bool
     */
    protected $isLimited;
    /**
     * @var int
     */
    protected $count;
    /**
     * @var AddOnUsage
     */
    protected $addOnUsage;

    /**
     * ISO_TIMESTAMP.
     */
    public function getCreated(): string
    {
        return $this->created;
    }

    /**
     * ISO_TIMESTAMP.
     */
    public function setCreated(string $created): self
    {
        $this->initialized['created'] = true;
        $this->created = $created;

        return $this;
    }

    /**
     * ISO_TIMESTAMP.
     */
    public function getModified(): string
    {
        return $this->modified;
    }

    /**
     * ISO_TIMESTAMP.
     */
    public function setModified(string $modified): self
    {
        $this->initialized['modified'] = true;
        $this->modified = $modified;

        return $this;
    }

    public function getId(): string
    {
        return $this->id;
    }

    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    public function getLimit(): int
    {
        return $this->limit;
    }

    public function setLimit(int $limit): self
    {
        $this->initialized['limit'] = true;
        $this->limit = $limit;

        return $this;
    }

    public function getIsTierDefault(): bool
    {
        return $this->isTierDefault;
    }

    public function setIsTierDefault(bool $isTierDefault): self
    {
        $this->initialized['isTierDefault'] = true;
        $this->isTierDefault = $isTierDefault;

        return $this;
    }

    public function getIsEnforced(): bool
    {
        return $this->isEnforced;
    }

    public function setIsEnforced(bool $isEnforced): self
    {
        $this->initialized['isEnforced'] = true;
        $this->isEnforced = $isEnforced;

        return $this;
    }

    public function getIsLimited(): bool
    {
        return $this->isLimited;
    }

    public function setIsLimited(bool $isLimited): self
    {
        $this->initialized['isLimited'] = true;
        $this->isLimited = $isLimited;

        return $this;
    }

    public function getCount(): int
    {
        return $this->count;
    }

    public function setCount(int $count): self
    {
        $this->initialized['count'] = true;
        $this->count = $count;

        return $this;
    }

    public function getAddOnUsage(): AddOnUsage
    {
        return $this->addOnUsage;
    }

    public function setAddOnUsage(AddOnUsage $addOnUsage): self
    {
        $this->initialized['addOnUsage'] = true;
        $this->addOnUsage = $addOnUsage;

        return $this;
    }
}
