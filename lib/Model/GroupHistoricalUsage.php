<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class GroupHistoricalUsage extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * the group's guid.
     *
     * @var string
     */
    protected $groupGuid;
    /**
     * A unit of time (day, week, or month).
     *
     * @var string
     */
    protected $unit;
    /**
     * Start date (format "2006-01-02") of the historical usage.
     *
     * @var string
     */
    protected $startDate;
    /**
     * End date (format "2006-01-02") of the historical usage.
     *
     * @var string
     */
    protected $endDate;
    /**
     * an array of all of the group's historical feature usage.
     *
     * @var list<HistoricalFeatureUsage>
     */
    protected $historicalLimitUsage;

    /**
     * the group's guid.
     */
    public function getGroupGuid(): string
    {
        return $this->groupGuid;
    }

    /**
     * the group's guid.
     */
    public function setGroupGuid(string $groupGuid): self
    {
        $this->initialized['groupGuid'] = true;
        $this->groupGuid = $groupGuid;

        return $this;
    }

    /**
     * A unit of time (day, week, or month).
     */
    public function getUnit(): string
    {
        return $this->unit;
    }

    /**
     * A unit of time (day, week, or month).
     */
    public function setUnit(string $unit): self
    {
        $this->initialized['unit'] = true;
        $this->unit = $unit;

        return $this;
    }

    /**
     * Start date (format "2006-01-02") of the historical usage.
     */
    public function getStartDate(): string
    {
        return $this->startDate;
    }

    /**
     * Start date (format "2006-01-02") of the historical usage.
     */
    public function setStartDate(string $startDate): self
    {
        $this->initialized['startDate'] = true;
        $this->startDate = $startDate;

        return $this;
    }

    /**
     * End date (format "2006-01-02") of the historical usage.
     */
    public function getEndDate(): string
    {
        return $this->endDate;
    }

    /**
     * End date (format "2006-01-02") of the historical usage.
     */
    public function setEndDate(string $endDate): self
    {
        $this->initialized['endDate'] = true;
        $this->endDate = $endDate;

        return $this;
    }

    /**
     * an array of all of the group's historical feature usage.
     *
     * @return list<HistoricalFeatureUsage>
     */
    public function getHistoricalLimitUsage(): array
    {
        return $this->historicalLimitUsage;
    }

    /**
     * an array of all of the group's historical feature usage.
     *
     * @param list<HistoricalFeatureUsage> $historicalLimitUsage
     */
    public function setHistoricalLimitUsage(array $historicalLimitUsage): self
    {
        $this->initialized['historicalLimitUsage'] = true;
        $this->historicalLimitUsage = $historicalLimitUsage;

        return $this;
    }
}
