<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class QRCodeDynamic extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * A unique id acting like a foreign key to reference the dynamic content. For bitlinks this would be the `<domain>/<backhalf>`, for other content it should be a standard guid.
     *
     * @var string
     */
    protected $dynamicId;
    /**
     * The linked bitlink's short url.
     *
     * @var string
     */
    protected $shortUrl;
    /**
     * The linked bitlink's long url.
     *
     * @var string
     */
    protected $longUrl;
    /**
     * A calculated field representing the number of times the QR code has been scanned.
     *
     * @var int
     */
    protected $totalScanCount;

    /**
     * A unique id acting like a foreign key to reference the dynamic content. For bitlinks this would be the `<domain>/<backhalf>`, for other content it should be a standard guid.
     */
    public function getDynamicId(): string
    {
        return $this->dynamicId;
    }

    /**
     * A unique id acting like a foreign key to reference the dynamic content. For bitlinks this would be the `<domain>/<backhalf>`, for other content it should be a standard guid.
     */
    public function setDynamicId(string $dynamicId): self
    {
        $this->initialized['dynamicId'] = true;
        $this->dynamicId = $dynamicId;

        return $this;
    }

    /**
     * The linked bitlink's short url.
     */
    public function getShortUrl(): string
    {
        return $this->shortUrl;
    }

    /**
     * The linked bitlink's short url.
     */
    public function setShortUrl(string $shortUrl): self
    {
        $this->initialized['shortUrl'] = true;
        $this->shortUrl = $shortUrl;

        return $this;
    }

    /**
     * The linked bitlink's long url.
     */
    public function getLongUrl(): string
    {
        return $this->longUrl;
    }

    /**
     * The linked bitlink's long url.
     */
    public function setLongUrl(string $longUrl): self
    {
        $this->initialized['longUrl'] = true;
        $this->longUrl = $longUrl;

        return $this;
    }

    /**
     * A calculated field representing the number of times the QR code has been scanned.
     */
    public function getTotalScanCount(): int
    {
        return $this->totalScanCount;
    }

    /**
     * A calculated field representing the number of times the QR code has been scanned.
     */
    public function setTotalScanCount(int $totalScanCount): self
    {
        $this->initialized['totalScanCount'] = true;
        $this->totalScanCount = $totalScanCount;

        return $this;
    }
}
