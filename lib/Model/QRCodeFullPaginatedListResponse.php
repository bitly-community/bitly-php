<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class QRCodeFullPaginatedListResponse extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var list<QRCode>
     */
    protected $qrCodes;
    /**
     * This object specifies how to query the next set of results.
     *
     * @var QRPagination
     */
    protected $pagination;
    /**
     * The 1-based page requested.
     *
     * @var int
     */
    protected $pageNumber;
    /**
     * The desired size of each page of results.
     *
     * @var int
     */
    protected $pageSize;
    /**
     * The count of all the qrcodes that match the filter.
     *
     * @var int
     */
    protected $totalCount;
    /**
     * The count of the current number of qrcodes in the response.
     *
     * @var int
     */
    protected $currentCount;

    /**
     * @return list<QRCode>
     */
    public function getQrCodes(): array
    {
        return $this->qrCodes;
    }

    /**
     * @param list<QRCode> $qrCodes
     */
    public function setQrCodes(array $qrCodes): self
    {
        $this->initialized['qrCodes'] = true;
        $this->qrCodes = $qrCodes;

        return $this;
    }

    /**
     * This object specifies how to query the next set of results.
     */
    public function getPagination(): QRPagination
    {
        return $this->pagination;
    }

    /**
     * This object specifies how to query the next set of results.
     */
    public function setPagination(QRPagination $pagination): self
    {
        $this->initialized['pagination'] = true;
        $this->pagination = $pagination;

        return $this;
    }

    /**
     * The 1-based page requested.
     */
    public function getPageNumber(): int
    {
        return $this->pageNumber;
    }

    /**
     * The 1-based page requested.
     */
    public function setPageNumber(int $pageNumber): self
    {
        $this->initialized['pageNumber'] = true;
        $this->pageNumber = $pageNumber;

        return $this;
    }

    /**
     * The desired size of each page of results.
     */
    public function getPageSize(): int
    {
        return $this->pageSize;
    }

    /**
     * The desired size of each page of results.
     */
    public function setPageSize(int $pageSize): self
    {
        $this->initialized['pageSize'] = true;
        $this->pageSize = $pageSize;

        return $this;
    }

    /**
     * The count of all the qrcodes that match the filter.
     */
    public function getTotalCount(): int
    {
        return $this->totalCount;
    }

    /**
     * The count of all the qrcodes that match the filter.
     */
    public function setTotalCount(int $totalCount): self
    {
        $this->initialized['totalCount'] = true;
        $this->totalCount = $totalCount;

        return $this;
    }

    /**
     * The count of the current number of qrcodes in the response.
     */
    public function getCurrentCount(): int
    {
        return $this->currentCount;
    }

    /**
     * The count of the current number of qrcodes in the response.
     */
    public function setCurrentCount(int $currentCount): self
    {
        $this->initialized['currentCount'] = true;
        $this->currentCount = $currentCount;

        return $this;
    }
}
