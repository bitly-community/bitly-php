<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class BitlySiteHeaderAppearance extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Enum of banner type options on a Bitly Site.
     *
     * @var string
     */
    protected $bannerType;
    /**
     * Enum of profile image sizes on a Bitly Site.
     *
     * @var string
     */
    protected $profileImageSize;
    /**
     * Enum of profile image shapes on a Bitly Site.
     *
     * @var string
     */
    protected $profileImageShape;
    /**
     * Enum of profile image border sizes on a Bitly Site.
     *
     * @var string
     */
    protected $profileImageBorderSize;
    /**
     * Enum of the profile image type options on a Bitly Site.
     *
     * @var string
     */
    protected $profileImageType;
    /**
     * Enum of the profile image locations available on a Bitly Site.
     *
     * @var string
     */
    protected $profileImageLocation;
    /**
     * @var bool
     */
    protected $profileImageOverflow;
    /**
     * Enum of the available text locations on a Bitly Site.
     *
     * @var string
     */
    protected $textLocation;
    /**
     * Enum of text sizes on a Bitly Site.
     *
     * @var string
     */
    protected $titleSize;
    /**
     * Enum of text alignment values on a Bitly Site.
     *
     * @var string
     */
    protected $titleAlignment;
    /**
     * Enum of text sizes on a Bitly Site.
     *
     * @var string
     */
    protected $titleWeight;
    /**
     * Enum of border type values on a Bitly Site.
     *
     * @var string
     */
    protected $titleBorderType;
    /**
     * Enum of text sizes on a Bitly Site.
     *
     * @var string
     */
    protected $descriptionSize;
    /**
     * Enum of text alignment values on a Bitly Site.
     *
     * @var string
     */
    protected $descriptionAlignment;
    /**
     * Enum of text sizes on a Bitly Site.
     *
     * @var string
     */
    protected $descriptionWeight;
    /**
     * Enum of border type values on a Bitly Site.
     *
     * @var string
     */
    protected $descriptionBorderType;
    /**
     * @var string
     */
    protected $headerBackgroundColor;
    /**
     * @var string
     */
    protected $bannerImageUrl;
    /**
     * Enum of style preference values on a Bitly Site.
     *
     * @var string
     */
    protected $headerStylePreference;
    /**
     * Available image alignment types for Site background images.
     *
     * @var string
     */
    protected $bannerImageAlignment;

    /**
     * Enum of banner type options on a Bitly Site.
     */
    public function getBannerType(): string
    {
        return $this->bannerType;
    }

    /**
     * Enum of banner type options on a Bitly Site.
     */
    public function setBannerType(string $bannerType): self
    {
        $this->initialized['bannerType'] = true;
        $this->bannerType = $bannerType;

        return $this;
    }

    /**
     * Enum of profile image sizes on a Bitly Site.
     */
    public function getProfileImageSize(): string
    {
        return $this->profileImageSize;
    }

    /**
     * Enum of profile image sizes on a Bitly Site.
     */
    public function setProfileImageSize(string $profileImageSize): self
    {
        $this->initialized['profileImageSize'] = true;
        $this->profileImageSize = $profileImageSize;

        return $this;
    }

    /**
     * Enum of profile image shapes on a Bitly Site.
     */
    public function getProfileImageShape(): string
    {
        return $this->profileImageShape;
    }

    /**
     * Enum of profile image shapes on a Bitly Site.
     */
    public function setProfileImageShape(string $profileImageShape): self
    {
        $this->initialized['profileImageShape'] = true;
        $this->profileImageShape = $profileImageShape;

        return $this;
    }

    /**
     * Enum of profile image border sizes on a Bitly Site.
     */
    public function getProfileImageBorderSize(): string
    {
        return $this->profileImageBorderSize;
    }

    /**
     * Enum of profile image border sizes on a Bitly Site.
     */
    public function setProfileImageBorderSize(string $profileImageBorderSize): self
    {
        $this->initialized['profileImageBorderSize'] = true;
        $this->profileImageBorderSize = $profileImageBorderSize;

        return $this;
    }

    /**
     * Enum of the profile image type options on a Bitly Site.
     */
    public function getProfileImageType(): string
    {
        return $this->profileImageType;
    }

    /**
     * Enum of the profile image type options on a Bitly Site.
     */
    public function setProfileImageType(string $profileImageType): self
    {
        $this->initialized['profileImageType'] = true;
        $this->profileImageType = $profileImageType;

        return $this;
    }

    /**
     * Enum of the profile image locations available on a Bitly Site.
     */
    public function getProfileImageLocation(): string
    {
        return $this->profileImageLocation;
    }

    /**
     * Enum of the profile image locations available on a Bitly Site.
     */
    public function setProfileImageLocation(string $profileImageLocation): self
    {
        $this->initialized['profileImageLocation'] = true;
        $this->profileImageLocation = $profileImageLocation;

        return $this;
    }

    public function getProfileImageOverflow(): bool
    {
        return $this->profileImageOverflow;
    }

    public function setProfileImageOverflow(bool $profileImageOverflow): self
    {
        $this->initialized['profileImageOverflow'] = true;
        $this->profileImageOverflow = $profileImageOverflow;

        return $this;
    }

    /**
     * Enum of the available text locations on a Bitly Site.
     */
    public function getTextLocation(): string
    {
        return $this->textLocation;
    }

    /**
     * Enum of the available text locations on a Bitly Site.
     */
    public function setTextLocation(string $textLocation): self
    {
        $this->initialized['textLocation'] = true;
        $this->textLocation = $textLocation;

        return $this;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function getTitleSize(): string
    {
        return $this->titleSize;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function setTitleSize(string $titleSize): self
    {
        $this->initialized['titleSize'] = true;
        $this->titleSize = $titleSize;

        return $this;
    }

    /**
     * Enum of text alignment values on a Bitly Site.
     */
    public function getTitleAlignment(): string
    {
        return $this->titleAlignment;
    }

    /**
     * Enum of text alignment values on a Bitly Site.
     */
    public function setTitleAlignment(string $titleAlignment): self
    {
        $this->initialized['titleAlignment'] = true;
        $this->titleAlignment = $titleAlignment;

        return $this;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function getTitleWeight(): string
    {
        return $this->titleWeight;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function setTitleWeight(string $titleWeight): self
    {
        $this->initialized['titleWeight'] = true;
        $this->titleWeight = $titleWeight;

        return $this;
    }

    /**
     * Enum of border type values on a Bitly Site.
     */
    public function getTitleBorderType(): string
    {
        return $this->titleBorderType;
    }

    /**
     * Enum of border type values on a Bitly Site.
     */
    public function setTitleBorderType(string $titleBorderType): self
    {
        $this->initialized['titleBorderType'] = true;
        $this->titleBorderType = $titleBorderType;

        return $this;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function getDescriptionSize(): string
    {
        return $this->descriptionSize;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function setDescriptionSize(string $descriptionSize): self
    {
        $this->initialized['descriptionSize'] = true;
        $this->descriptionSize = $descriptionSize;

        return $this;
    }

    /**
     * Enum of text alignment values on a Bitly Site.
     */
    public function getDescriptionAlignment(): string
    {
        return $this->descriptionAlignment;
    }

    /**
     * Enum of text alignment values on a Bitly Site.
     */
    public function setDescriptionAlignment(string $descriptionAlignment): self
    {
        $this->initialized['descriptionAlignment'] = true;
        $this->descriptionAlignment = $descriptionAlignment;

        return $this;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function getDescriptionWeight(): string
    {
        return $this->descriptionWeight;
    }

    /**
     * Enum of text sizes on a Bitly Site.
     */
    public function setDescriptionWeight(string $descriptionWeight): self
    {
        $this->initialized['descriptionWeight'] = true;
        $this->descriptionWeight = $descriptionWeight;

        return $this;
    }

    /**
     * Enum of border type values on a Bitly Site.
     */
    public function getDescriptionBorderType(): string
    {
        return $this->descriptionBorderType;
    }

    /**
     * Enum of border type values on a Bitly Site.
     */
    public function setDescriptionBorderType(string $descriptionBorderType): self
    {
        $this->initialized['descriptionBorderType'] = true;
        $this->descriptionBorderType = $descriptionBorderType;

        return $this;
    }

    public function getHeaderBackgroundColor(): string
    {
        return $this->headerBackgroundColor;
    }

    public function setHeaderBackgroundColor(string $headerBackgroundColor): self
    {
        $this->initialized['headerBackgroundColor'] = true;
        $this->headerBackgroundColor = $headerBackgroundColor;

        return $this;
    }

    public function getBannerImageUrl(): string
    {
        return $this->bannerImageUrl;
    }

    public function setBannerImageUrl(string $bannerImageUrl): self
    {
        $this->initialized['bannerImageUrl'] = true;
        $this->bannerImageUrl = $bannerImageUrl;

        return $this;
    }

    /**
     * Enum of style preference values on a Bitly Site.
     */
    public function getHeaderStylePreference(): string
    {
        return $this->headerStylePreference;
    }

    /**
     * Enum of style preference values on a Bitly Site.
     */
    public function setHeaderStylePreference(string $headerStylePreference): self
    {
        $this->initialized['headerStylePreference'] = true;
        $this->headerStylePreference = $headerStylePreference;

        return $this;
    }

    /**
     * Available image alignment types for Site background images.
     */
    public function getBannerImageAlignment(): string
    {
        return $this->bannerImageAlignment;
    }

    /**
     * Available image alignment types for Site background images.
     */
    public function setBannerImageAlignment(string $bannerImageAlignment): self
    {
        $this->initialized['bannerImageAlignment'] = true;
        $this->bannerImageAlignment = $bannerImageAlignment;

        return $this;
    }
}
