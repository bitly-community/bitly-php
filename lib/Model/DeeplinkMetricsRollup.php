<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class DeeplinkMetricsRollup extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var DeeplinkMetric
     */
    protected $ios;
    /**
     * @var DeeplinkMetric
     */
    protected $android;
    /**
     * @var DeeplinkMetric
     */
    protected $other;
    /**
     * the unit of time queried for (minute, hour, day, week, month).
     *
     * @var string
     */
    protected $unit = 'day';
    /**
     * the number of units queried for.
     *
     * @var int
     */
    protected $units = -1;
    /**
     * data returned up to this reference timestamp ISO-8601 format.
     *
     * @var string
     */
    protected $unitReference;

    public function getIos(): DeeplinkMetric
    {
        return $this->ios;
    }

    public function setIos(DeeplinkMetric $ios): self
    {
        $this->initialized['ios'] = true;
        $this->ios = $ios;

        return $this;
    }

    public function getAndroid(): DeeplinkMetric
    {
        return $this->android;
    }

    public function setAndroid(DeeplinkMetric $android): self
    {
        $this->initialized['android'] = true;
        $this->android = $android;

        return $this;
    }

    public function getOther(): DeeplinkMetric
    {
        return $this->other;
    }

    public function setOther(DeeplinkMetric $other): self
    {
        $this->initialized['other'] = true;
        $this->other = $other;

        return $this;
    }

    /**
     * the unit of time queried for (minute, hour, day, week, month).
     */
    public function getUnit(): string
    {
        return $this->unit;
    }

    /**
     * the unit of time queried for (minute, hour, day, week, month).
     */
    public function setUnit(string $unit): self
    {
        $this->initialized['unit'] = true;
        $this->unit = $unit;

        return $this;
    }

    /**
     * the number of units queried for.
     */
    public function getUnits(): int
    {
        return $this->units;
    }

    /**
     * the number of units queried for.
     */
    public function setUnits(int $units): self
    {
        $this->initialized['units'] = true;
        $this->units = $units;

        return $this;
    }

    /**
     * data returned up to this reference timestamp ISO-8601 format.
     */
    public function getUnitReference(): string
    {
        return $this->unitReference;
    }

    /**
     * data returned up to this reference timestamp ISO-8601 format.
     */
    public function setUnitReference(string $unitReference): self
    {
        $this->initialized['unitReference'] = true;
        $this->unitReference = $unitReference;

        return $this;
    }
}
