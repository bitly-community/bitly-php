<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class LaunchpadAppearance extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $layoutV2;
    /**
     * @var BitlySiteHeaderAppearance
     */
    protected $headerAppearance;
    /**
     * @var string
     */
    protected $launchpadId;
    /**
     * @var string
     */
    protected $background;
    /**
     * @var string
     */
    protected $bottomBackground;
    /**
     * @var string
     */
    protected $launchpadTextColor;
    /**
     * @var string
     */
    protected $descriptionColor;
    /**
     * @var string
     */
    protected $avatarImageUrl;
    /**
     * @var string
     */
    protected $backgroundImageUrl;
    /**
     * @var string
     */
    protected $avatarUploadImage;
    /**
     * @var string
     */
    protected $backgroundUploadImage;
    /**
     * @var string
     */
    protected $font;
    /**
     * @var string
     */
    protected $displayName;
    /**
     * @var string
     */
    protected $description;
    /**
     * @var bool
     */
    protected $hideBitlyLogo;
    /**
     * @var int
     */
    protected $themeId;
    /**
     * @var string
     */
    protected $layout;
    /**
     * @var LaunchpadButtonAppearance
     */
    protected $buttonAppearance;
    /**
     * Enum of style preference values on a Bitly Site.
     *
     * @var string
     */
    protected $stylePreference;
    /**
     * Available image alignment types for Site background images.
     *
     * @var string
     */
    protected $backgroundImageAlignment;
    /**
     * @var string
     */
    protected $socialIconColor;
    /**
     * @var string
     */
    protected $socialIconLayoutPosition;
    /**
     * @var string
     */
    protected $socialIconPosition;

    public function getLayoutV2(): int
    {
        return $this->layoutV2;
    }

    public function setLayoutV2(int $layoutV2): self
    {
        $this->initialized['layoutV2'] = true;
        $this->layoutV2 = $layoutV2;

        return $this;
    }

    public function getHeaderAppearance(): BitlySiteHeaderAppearance
    {
        return $this->headerAppearance;
    }

    public function setHeaderAppearance(BitlySiteHeaderAppearance $headerAppearance): self
    {
        $this->initialized['headerAppearance'] = true;
        $this->headerAppearance = $headerAppearance;

        return $this;
    }

    public function getLaunchpadId(): string
    {
        return $this->launchpadId;
    }

    public function setLaunchpadId(string $launchpadId): self
    {
        $this->initialized['launchpadId'] = true;
        $this->launchpadId = $launchpadId;

        return $this;
    }

    public function getBackground(): string
    {
        return $this->background;
    }

    public function setBackground(string $background): self
    {
        $this->initialized['background'] = true;
        $this->background = $background;

        return $this;
    }

    public function getBottomBackground(): string
    {
        return $this->bottomBackground;
    }

    public function setBottomBackground(string $bottomBackground): self
    {
        $this->initialized['bottomBackground'] = true;
        $this->bottomBackground = $bottomBackground;

        return $this;
    }

    public function getLaunchpadTextColor(): string
    {
        return $this->launchpadTextColor;
    }

    public function setLaunchpadTextColor(string $launchpadTextColor): self
    {
        $this->initialized['launchpadTextColor'] = true;
        $this->launchpadTextColor = $launchpadTextColor;

        return $this;
    }

    public function getDescriptionColor(): string
    {
        return $this->descriptionColor;
    }

    public function setDescriptionColor(string $descriptionColor): self
    {
        $this->initialized['descriptionColor'] = true;
        $this->descriptionColor = $descriptionColor;

        return $this;
    }

    public function getAvatarImageUrl(): string
    {
        return $this->avatarImageUrl;
    }

    public function setAvatarImageUrl(string $avatarImageUrl): self
    {
        $this->initialized['avatarImageUrl'] = true;
        $this->avatarImageUrl = $avatarImageUrl;

        return $this;
    }

    public function getBackgroundImageUrl(): string
    {
        return $this->backgroundImageUrl;
    }

    public function setBackgroundImageUrl(string $backgroundImageUrl): self
    {
        $this->initialized['backgroundImageUrl'] = true;
        $this->backgroundImageUrl = $backgroundImageUrl;

        return $this;
    }

    public function getAvatarUploadImage(): string
    {
        return $this->avatarUploadImage;
    }

    public function setAvatarUploadImage(string $avatarUploadImage): self
    {
        $this->initialized['avatarUploadImage'] = true;
        $this->avatarUploadImage = $avatarUploadImage;

        return $this;
    }

    public function getBackgroundUploadImage(): string
    {
        return $this->backgroundUploadImage;
    }

    public function setBackgroundUploadImage(string $backgroundUploadImage): self
    {
        $this->initialized['backgroundUploadImage'] = true;
        $this->backgroundUploadImage = $backgroundUploadImage;

        return $this;
    }

    public function getFont(): string
    {
        return $this->font;
    }

    public function setFont(string $font): self
    {
        $this->initialized['font'] = true;
        $this->font = $font;

        return $this;
    }

    public function getDisplayName(): string
    {
        return $this->displayName;
    }

    public function setDisplayName(string $displayName): self
    {
        $this->initialized['displayName'] = true;
        $this->displayName = $displayName;

        return $this;
    }

    public function getDescription(): string
    {
        return $this->description;
    }

    public function setDescription(string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    public function getHideBitlyLogo(): bool
    {
        return $this->hideBitlyLogo;
    }

    public function setHideBitlyLogo(bool $hideBitlyLogo): self
    {
        $this->initialized['hideBitlyLogo'] = true;
        $this->hideBitlyLogo = $hideBitlyLogo;

        return $this;
    }

    public function getThemeId(): int
    {
        return $this->themeId;
    }

    public function setThemeId(int $themeId): self
    {
        $this->initialized['themeId'] = true;
        $this->themeId = $themeId;

        return $this;
    }

    public function getLayout(): string
    {
        return $this->layout;
    }

    public function setLayout(string $layout): self
    {
        $this->initialized['layout'] = true;
        $this->layout = $layout;

        return $this;
    }

    public function getButtonAppearance(): LaunchpadButtonAppearance
    {
        return $this->buttonAppearance;
    }

    public function setButtonAppearance(LaunchpadButtonAppearance $buttonAppearance): self
    {
        $this->initialized['buttonAppearance'] = true;
        $this->buttonAppearance = $buttonAppearance;

        return $this;
    }

    /**
     * Enum of style preference values on a Bitly Site.
     */
    public function getStylePreference(): string
    {
        return $this->stylePreference;
    }

    /**
     * Enum of style preference values on a Bitly Site.
     */
    public function setStylePreference(string $stylePreference): self
    {
        $this->initialized['stylePreference'] = true;
        $this->stylePreference = $stylePreference;

        return $this;
    }

    /**
     * Available image alignment types for Site background images.
     */
    public function getBackgroundImageAlignment(): string
    {
        return $this->backgroundImageAlignment;
    }

    /**
     * Available image alignment types for Site background images.
     */
    public function setBackgroundImageAlignment(string $backgroundImageAlignment): self
    {
        $this->initialized['backgroundImageAlignment'] = true;
        $this->backgroundImageAlignment = $backgroundImageAlignment;

        return $this;
    }

    public function getSocialIconColor(): string
    {
        return $this->socialIconColor;
    }

    public function setSocialIconColor(string $socialIconColor): self
    {
        $this->initialized['socialIconColor'] = true;
        $this->socialIconColor = $socialIconColor;

        return $this;
    }

    public function getSocialIconLayoutPosition(): string
    {
        return $this->socialIconLayoutPosition;
    }

    public function setSocialIconLayoutPosition(string $socialIconLayoutPosition): self
    {
        $this->initialized['socialIconLayoutPosition'] = true;
        $this->socialIconLayoutPosition = $socialIconLayoutPosition;

        return $this;
    }

    public function getSocialIconPosition(): string
    {
        return $this->socialIconPosition;
    }

    public function setSocialIconPosition(string $socialIconPosition): self
    {
        $this->initialized['socialIconPosition'] = true;
        $this->socialIconPosition = $socialIconPosition;

        return $this;
    }
}
