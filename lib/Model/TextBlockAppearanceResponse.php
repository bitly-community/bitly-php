<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class TextBlockAppearanceResponse extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var string
     */
    protected $backgroundColor;
    /**
     * @var string
     */
    protected $textColor;
    /**
     * @var string
     */
    protected $alignment;
    /**
     * @var TextBlockStyle
     */
    protected $textBlockStyle;
    /**
     * @var string
     */
    protected $fontSize;
    /**
     * @var int
     */
    protected $shape;
    /**
     * @var int
     */
    protected $shadow;

    public function getBackgroundColor(): string
    {
        return $this->backgroundColor;
    }

    public function setBackgroundColor(string $backgroundColor): self
    {
        $this->initialized['backgroundColor'] = true;
        $this->backgroundColor = $backgroundColor;

        return $this;
    }

    public function getTextColor(): string
    {
        return $this->textColor;
    }

    public function setTextColor(string $textColor): self
    {
        $this->initialized['textColor'] = true;
        $this->textColor = $textColor;

        return $this;
    }

    public function getAlignment(): string
    {
        return $this->alignment;
    }

    public function setAlignment(string $alignment): self
    {
        $this->initialized['alignment'] = true;
        $this->alignment = $alignment;

        return $this;
    }

    public function getTextBlockStyle(): TextBlockStyle
    {
        return $this->textBlockStyle;
    }

    public function setTextBlockStyle(TextBlockStyle $textBlockStyle): self
    {
        $this->initialized['textBlockStyle'] = true;
        $this->textBlockStyle = $textBlockStyle;

        return $this;
    }

    public function getFontSize(): string
    {
        return $this->fontSize;
    }

    public function setFontSize(string $fontSize): self
    {
        $this->initialized['fontSize'] = true;
        $this->fontSize = $fontSize;

        return $this;
    }

    public function getShape(): int
    {
        return $this->shape;
    }

    public function setShape(int $shape): self
    {
        $this->initialized['shape'] = true;
        $this->shape = $shape;

        return $this;
    }

    public function getShadow(): int
    {
        return $this->shadow;
    }

    public function setShadow(int $shadow): self
    {
        $this->initialized['shadow'] = true;
        $this->shadow = $shadow;

        return $this;
    }
}
