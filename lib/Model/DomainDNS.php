<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class DomainDNS extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * the requested domain.
     *
     * @var string
     */
    protected $domain;
    /**
     * the detected DNS provider for the requested domain.
     *
     * @var string
     */
    protected $dnsProvider;
    /**
     * the type of DNS record returned.
     *
     * @var string
     */
    protected $type;
    /**
     * the records returned by the lookup.
     *
     * @var list<string>
     */
    protected $records;
    /**
     * whether the returned records represent a valid configuration.
     *
     * @var bool
     */
    protected $recordsValid;

    /**
     * the requested domain.
     */
    public function getDomain(): string
    {
        return $this->domain;
    }

    /**
     * the requested domain.
     */
    public function setDomain(string $domain): self
    {
        $this->initialized['domain'] = true;
        $this->domain = $domain;

        return $this;
    }

    /**
     * the detected DNS provider for the requested domain.
     */
    public function getDnsProvider(): string
    {
        return $this->dnsProvider;
    }

    /**
     * the detected DNS provider for the requested domain.
     */
    public function setDnsProvider(string $dnsProvider): self
    {
        $this->initialized['dnsProvider'] = true;
        $this->dnsProvider = $dnsProvider;

        return $this;
    }

    /**
     * the type of DNS record returned.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * the type of DNS record returned.
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * the records returned by the lookup.
     *
     * @return list<string>
     */
    public function getRecords(): array
    {
        return $this->records;
    }

    /**
     * the records returned by the lookup.
     *
     * @param list<string> $records
     */
    public function setRecords(array $records): self
    {
        $this->initialized['records'] = true;
        $this->records = $records;

        return $this;
    }

    /**
     * whether the returned records represent a valid configuration.
     */
    public function getRecordsValid(): bool
    {
        return $this->recordsValid;
    }

    /**
     * whether the returned records represent a valid configuration.
     */
    public function setRecordsValid(bool $recordsValid): self
    {
        $this->initialized['recordsValid'] = true;
        $this->recordsValid = $recordsValid;

        return $this;
    }
}
