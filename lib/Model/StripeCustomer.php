<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class StripeCustomer extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Unique identifier for the Stripe customer.
     *
     * @var string
     */
    protected $id;
    /**
     * @var StripeAddress
     */
    protected $address;
    /**
     * Customer's full name.
     *
     * @var string
     */
    protected $name;
    /**
     * Customer's phone number.
     *
     * @var string
     */
    protected $phone;
    /**
     * @var StripeCustomerInvoiceSettings
     */
    protected $invoiceSettings;
    /**
     * Set of key-value pairs for storing additional information.
     *
     * @var array<string, string>
     */
    protected $metadata;
    /**
     * Customer's email address.
     *
     * @var string
     */
    protected $email;
    /**
     * Three-letter ISO currency code.
     *
     * @var string
     */
    protected $currency;

    /**
     * Unique identifier for the Stripe customer.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Unique identifier for the Stripe customer.
     */
    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getAddress(): StripeAddress
    {
        return $this->address;
    }

    public function setAddress(StripeAddress $address): self
    {
        $this->initialized['address'] = true;
        $this->address = $address;

        return $this;
    }

    /**
     * Customer's full name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Customer's full name.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * Customer's phone number.
     */
    public function getPhone(): string
    {
        return $this->phone;
    }

    /**
     * Customer's phone number.
     */
    public function setPhone(string $phone): self
    {
        $this->initialized['phone'] = true;
        $this->phone = $phone;

        return $this;
    }

    public function getInvoiceSettings(): StripeCustomerInvoiceSettings
    {
        return $this->invoiceSettings;
    }

    public function setInvoiceSettings(StripeCustomerInvoiceSettings $invoiceSettings): self
    {
        $this->initialized['invoiceSettings'] = true;
        $this->invoiceSettings = $invoiceSettings;

        return $this;
    }

    /**
     * Set of key-value pairs for storing additional information.
     *
     * @return array<string, string>
     */
    public function getMetadata(): iterable
    {
        return $this->metadata;
    }

    /**
     * Set of key-value pairs for storing additional information.
     *
     * @param array<string, string> $metadata
     */
    public function setMetadata(iterable $metadata): self
    {
        $this->initialized['metadata'] = true;
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * Customer's email address.
     */
    public function getEmail(): string
    {
        return $this->email;
    }

    /**
     * Customer's email address.
     */
    public function setEmail(string $email): self
    {
        $this->initialized['email'] = true;
        $this->email = $email;

        return $this;
    }

    /**
     * Three-letter ISO currency code.
     */
    public function getCurrency(): string
    {
        return $this->currency;
    }

    /**
     * Three-letter ISO currency code.
     */
    public function setCurrency(string $currency): self
    {
        $this->initialized['currency'] = true;
        $this->currency = $currency;

        return $this;
    }
}
