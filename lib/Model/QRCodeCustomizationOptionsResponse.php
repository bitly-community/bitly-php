<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class QRCodeCustomizationOptionsResponse extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * list of frame options.
     *
     * @var list<QRCodeFrameResponseItem>
     */
    protected $frames;
    /**
     * list of dot pattern options.
     *
     * @var list<QRCodeDotPattern>
     */
    protected $dotPatterns;
    /**
     * list of corner options.
     *
     * @var list<QRCodeCornerResponseItem>
     */
    protected $corners;
    /**
     * list of image format options.
     *
     * @var list<string>
     */
    protected $formats;
    /**
     * list of dynamic type options.
     *
     * @var list<QRCodeTypeItem>
     */
    protected $dynamicTypes;
    /**
     * list of static type options.
     *
     * @var list<QRCodeTypeItem>
     */
    protected $staticTypes;
    /**
     * list of logo options.
     *
     * @var list<QRCodeLogoImage>
     */
    protected $logos;

    /**
     * list of frame options.
     *
     * @return list<QRCodeFrameResponseItem>
     */
    public function getFrames(): array
    {
        return $this->frames;
    }

    /**
     * list of frame options.
     *
     * @param list<QRCodeFrameResponseItem> $frames
     */
    public function setFrames(array $frames): self
    {
        $this->initialized['frames'] = true;
        $this->frames = $frames;

        return $this;
    }

    /**
     * list of dot pattern options.
     *
     * @return list<QRCodeDotPattern>
     */
    public function getDotPatterns(): array
    {
        return $this->dotPatterns;
    }

    /**
     * list of dot pattern options.
     *
     * @param list<QRCodeDotPattern> $dotPatterns
     */
    public function setDotPatterns(array $dotPatterns): self
    {
        $this->initialized['dotPatterns'] = true;
        $this->dotPatterns = $dotPatterns;

        return $this;
    }

    /**
     * list of corner options.
     *
     * @return list<QRCodeCornerResponseItem>
     */
    public function getCorners(): array
    {
        return $this->corners;
    }

    /**
     * list of corner options.
     *
     * @param list<QRCodeCornerResponseItem> $corners
     */
    public function setCorners(array $corners): self
    {
        $this->initialized['corners'] = true;
        $this->corners = $corners;

        return $this;
    }

    /**
     * list of image format options.
     *
     * @return list<string>
     */
    public function getFormats(): array
    {
        return $this->formats;
    }

    /**
     * list of image format options.
     *
     * @param list<string> $formats
     */
    public function setFormats(array $formats): self
    {
        $this->initialized['formats'] = true;
        $this->formats = $formats;

        return $this;
    }

    /**
     * list of dynamic type options.
     *
     * @return list<QRCodeTypeItem>
     */
    public function getDynamicTypes(): array
    {
        return $this->dynamicTypes;
    }

    /**
     * list of dynamic type options.
     *
     * @param list<QRCodeTypeItem> $dynamicTypes
     */
    public function setDynamicTypes(array $dynamicTypes): self
    {
        $this->initialized['dynamicTypes'] = true;
        $this->dynamicTypes = $dynamicTypes;

        return $this;
    }

    /**
     * list of static type options.
     *
     * @return list<QRCodeTypeItem>
     */
    public function getStaticTypes(): array
    {
        return $this->staticTypes;
    }

    /**
     * list of static type options.
     *
     * @param list<QRCodeTypeItem> $staticTypes
     */
    public function setStaticTypes(array $staticTypes): self
    {
        $this->initialized['staticTypes'] = true;
        $this->staticTypes = $staticTypes;

        return $this;
    }

    /**
     * list of logo options.
     *
     * @return list<QRCodeLogoImage>
     */
    public function getLogos(): array
    {
        return $this->logos;
    }

    /**
     * list of logo options.
     *
     * @param list<QRCodeLogoImage> $logos
     */
    public function setLogos(array $logos): self
    {
        $this->initialized['logos'] = true;
        $this->logos = $logos;

        return $this;
    }
}
