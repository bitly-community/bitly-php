<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class PublicCreateQRCodeRequest extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The title of the QR Code.
     *
     * @var string
     */
    protected $title;
    /**
     * Identify which group to place the QR Code.
     *
     * @var string
     */
    protected $groupGuid;
    /**
     * Options for customizing a QR Code's appearance.
     *
     * @var QRCodeCustomizationsPublic
     */
    protected $renderCustomizations;
    /**
     * A boolean representing if the QR code should be archived (hidden from the UI) upon creation.
     *
     * @var bool
     */
    protected $archived;
    /**
     * @var QRCodeDestination
     */
    protected $destination;
    /**
     * Contains GS1 related metadata.
     *
     * @var GS1Metadata
     */
    protected $gs1;

    /**
     * The title of the QR Code.
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * The title of the QR Code.
     */
    public function setTitle(string $title): self
    {
        $this->initialized['title'] = true;
        $this->title = $title;

        return $this;
    }

    /**
     * Identify which group to place the QR Code.
     */
    public function getGroupGuid(): string
    {
        return $this->groupGuid;
    }

    /**
     * Identify which group to place the QR Code.
     */
    public function setGroupGuid(string $groupGuid): self
    {
        $this->initialized['groupGuid'] = true;
        $this->groupGuid = $groupGuid;

        return $this;
    }

    /**
     * Options for customizing a QR Code's appearance.
     */
    public function getRenderCustomizations(): QRCodeCustomizationsPublic
    {
        return $this->renderCustomizations;
    }

    /**
     * Options for customizing a QR Code's appearance.
     */
    public function setRenderCustomizations(QRCodeCustomizationsPublic $renderCustomizations): self
    {
        $this->initialized['renderCustomizations'] = true;
        $this->renderCustomizations = $renderCustomizations;

        return $this;
    }

    /**
     * A boolean representing if the QR code should be archived (hidden from the UI) upon creation.
     */
    public function getArchived(): bool
    {
        return $this->archived;
    }

    /**
     * A boolean representing if the QR code should be archived (hidden from the UI) upon creation.
     */
    public function setArchived(bool $archived): self
    {
        $this->initialized['archived'] = true;
        $this->archived = $archived;

        return $this;
    }

    public function getDestination(): QRCodeDestination
    {
        return $this->destination;
    }

    public function setDestination(QRCodeDestination $destination): self
    {
        $this->initialized['destination'] = true;
        $this->destination = $destination;

        return $this;
    }

    /**
     * Contains GS1 related metadata.
     */
    public function getGs1(): GS1Metadata
    {
        return $this->gs1;
    }

    /**
     * Contains GS1 related metadata.
     */
    public function setGs1(GS1Metadata $gs1): self
    {
        $this->initialized['gs1'] = true;
        $this->gs1 = $gs1;

        return $this;
    }
}
