<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Model;

class QRCodeTemplate extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The QR code template's id, as a shortid.
     *
     * @var string
     */
    protected $id;
    /**
     * The Bitly brand_guid preference for use in the Bitly Canva app.
     *
     * @var string
     */
    protected $brandGuid;
    /**
     * Options for customizing a QR Code's appearance.
     *
     * @var QRCodeCustomizations
     */
    protected $renderCustomizations;
    /**
     * A boolean representing whether this is a default template premade by bitly.
     *
     * @var bool
     */
    protected $premade;
    /**
     * A boolean representing if this template is currently active.
     *
     * @var bool
     */
    protected $isActive;
    /**
     * The unix epoch time when the QR code template was created.
     *
     * @var int
     */
    protected $createdTs;
    /**
     * The unix epoch time when the QR code template was updated.
     *
     * @var int
     */
    protected $modifiedTs;
    /**
     * The QR code template's thumbnail svg image data as a data uri.
     *
     * @var string
     */
    protected $svg;

    /**
     * The QR code template's id, as a shortid.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * The QR code template's id, as a shortid.
     */
    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The Bitly brand_guid preference for use in the Bitly Canva app.
     */
    public function getBrandGuid(): string
    {
        return $this->brandGuid;
    }

    /**
     * The Bitly brand_guid preference for use in the Bitly Canva app.
     */
    public function setBrandGuid(string $brandGuid): self
    {
        $this->initialized['brandGuid'] = true;
        $this->brandGuid = $brandGuid;

        return $this;
    }

    /**
     * Options for customizing a QR Code's appearance.
     */
    public function getRenderCustomizations(): QRCodeCustomizations
    {
        return $this->renderCustomizations;
    }

    /**
     * Options for customizing a QR Code's appearance.
     */
    public function setRenderCustomizations(QRCodeCustomizations $renderCustomizations): self
    {
        $this->initialized['renderCustomizations'] = true;
        $this->renderCustomizations = $renderCustomizations;

        return $this;
    }

    /**
     * A boolean representing whether this is a default template premade by bitly.
     */
    public function getPremade(): bool
    {
        return $this->premade;
    }

    /**
     * A boolean representing whether this is a default template premade by bitly.
     */
    public function setPremade(bool $premade): self
    {
        $this->initialized['premade'] = true;
        $this->premade = $premade;

        return $this;
    }

    /**
     * A boolean representing if this template is currently active.
     */
    public function getIsActive(): bool
    {
        return $this->isActive;
    }

    /**
     * A boolean representing if this template is currently active.
     */
    public function setIsActive(bool $isActive): self
    {
        $this->initialized['isActive'] = true;
        $this->isActive = $isActive;

        return $this;
    }

    /**
     * The unix epoch time when the QR code template was created.
     */
    public function getCreatedTs(): int
    {
        return $this->createdTs;
    }

    /**
     * The unix epoch time when the QR code template was created.
     */
    public function setCreatedTs(int $createdTs): self
    {
        $this->initialized['createdTs'] = true;
        $this->createdTs = $createdTs;

        return $this;
    }

    /**
     * The unix epoch time when the QR code template was updated.
     */
    public function getModifiedTs(): int
    {
        return $this->modifiedTs;
    }

    /**
     * The unix epoch time when the QR code template was updated.
     */
    public function setModifiedTs(int $modifiedTs): self
    {
        $this->initialized['modifiedTs'] = true;
        $this->modifiedTs = $modifiedTs;

        return $this;
    }

    /**
     * The QR code template's thumbnail svg image data as a data uri.
     */
    public function getSvg(): string
    {
        return $this->svg;
    }

    /**
     * The QR code template's thumbnail svg image data as a data uri.
     */
    public function setSvg(string $svg): self
    {
        $this->initialized['svg'] = true;
        $this->svg = $svg;

        return $this;
    }
}
