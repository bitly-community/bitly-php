<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Endpoint;

class GetLinkEngagementsReport extends \Bitly\Runtime\Client\BaseEndpoint implements \Bitly\Runtime\Client\Endpoint
{
    use \Bitly\Runtime\Client\EndpointTrait;
    protected $group_guid;
    protected $report_id;
    protected $accept;

    /**
     * Returns a csv file download or queues an email export job.
     *
     * @param string $groupGuid A GUID for a Bitly group
     * @param string $reportId  A GUID for a Bitly Analytics Report
     * @param array  $accept    Accept content header text/csv|application/json
     */
    public function __construct(string $groupGuid, string $reportId, array $accept = [])
    {
        $this->group_guid = $groupGuid;
        $this->report_id = $reportId;
        $this->accept = $accept;
    }

    public function getMethod(): string
    {
        return 'GET';
    }

    public function getUri(): string
    {
        return str_replace(['{group_guid}', '{report_id}'], [$this->group_guid, $this->report_id], '/analytics/groups/{group_guid}/reports/{report_id}/link_performance/export');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        if (empty($this->accept)) {
            return ['Accept' => ['text/csv', 'application/json']];
        }

        return $this->accept;
    }

    /**
     * @return null
     *
     * @throws \Bitly\Exception\GetLinkEngagementsReportBadRequestException
     * @throws \Bitly\Exception\GetLinkEngagementsReportForbiddenException
     * @throws \Bitly\Exception\GetLinkEngagementsReportNotFoundException
     * @throws \Bitly\Exception\GetLinkEngagementsReportUnprocessableEntityException
     * @throws \Bitly\Exception\GetLinkEngagementsReportInternalServerErrorException
     * @throws \Bitly\Exception\GetLinkEngagementsReportServiceUnavailableException
     */
    protected function transformResponseBody(\Psr\Http\Message\ResponseInterface $response, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        $status = $response->getStatusCode();
        $body = (string) $response->getBody();
        if (200 === $status) {
        }
        if (202 === $status) {
            return null;
        }
        if (is_null($contentType) === false && (400 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\GetLinkEngagementsReportBadRequestException($serializer->deserialize($body, 'Bitly\Model\BadRequest', 'json'), $response);
        }
        if (is_null($contentType) === false && (403 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\GetLinkEngagementsReportForbiddenException($serializer->deserialize($body, 'Bitly\Model\Forbidden', 'json'), $response);
        }
        if (is_null($contentType) === false && (404 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\GetLinkEngagementsReportNotFoundException($serializer->deserialize($body, 'Bitly\Model\NotFound', 'json'), $response);
        }
        if (is_null($contentType) === false && (422 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\GetLinkEngagementsReportUnprocessableEntityException($serializer->deserialize($body, 'Bitly\Model\UnprocessableEntity', 'json'), $response);
        }
        if (is_null($contentType) === false && (500 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\GetLinkEngagementsReportInternalServerErrorException($serializer->deserialize($body, 'Bitly\Model\InternalError', 'json'), $response);
        }
        if (is_null($contentType) === false && (503 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\GetLinkEngagementsReportServiceUnavailableException($serializer->deserialize($body, 'Bitly\Model\TemporarilyUnavailable', 'json'), $response);
        }
    }

    public function getAuthenticationScopes(): array
    {
        return ['bearerAuth'];
    }
}
