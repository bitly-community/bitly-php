<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Endpoint;

class DeleteLaunchpadButton extends \Bitly\Runtime\Client\BaseEndpoint implements \Bitly\Runtime\Client\Endpoint
{
    use \Bitly\Runtime\Client\EndpointTrait;
    protected $launchpad_id;
    protected $button_id;

    /**
     * Fully deletes a link launchpad button - does not deactivate. Does not delete link tied to button.
     *
     * @param string $launchpadId A GUID for a Bitly Link Launchpad
     * @param string $buttonId    A GUID for a Bitly Link Launchpad button
     */
    public function __construct(string $launchpadId, string $buttonId)
    {
        $this->launchpad_id = $launchpadId;
        $this->button_id = $buttonId;
    }

    public function getMethod(): string
    {
        return 'DELETE';
    }

    public function getUri(): string
    {
        return str_replace(['{launchpad_id}', '{button_id}'], [$this->launchpad_id, $this->button_id], '/launchpads/{launchpad_id}/buttons/{button_id}');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    /**
     * @return null
     *
     * @throws \Bitly\Exception\DeleteLaunchpadButtonForbiddenException
     * @throws \Bitly\Exception\DeleteLaunchpadButtonNotFoundException
     * @throws \Bitly\Exception\DeleteLaunchpadButtonInternalServerErrorException
     * @throws \Bitly\Exception\DeleteLaunchpadButtonServiceUnavailableException
     */
    protected function transformResponseBody(\Psr\Http\Message\ResponseInterface $response, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        $status = $response->getStatusCode();
        $body = (string) $response->getBody();
        if (204 === $status) {
            return null;
        }
        if (is_null($contentType) === false && (403 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\DeleteLaunchpadButtonForbiddenException($serializer->deserialize($body, 'Bitly\Model\Forbidden', 'json'), $response);
        }
        if (is_null($contentType) === false && (404 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\DeleteLaunchpadButtonNotFoundException($serializer->deserialize($body, 'Bitly\Model\NotFound', 'json'), $response);
        }
        if (is_null($contentType) === false && (500 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\DeleteLaunchpadButtonInternalServerErrorException($serializer->deserialize($body, 'Bitly\Model\InternalError', 'json'), $response);
        }
        if (is_null($contentType) === false && (503 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \Bitly\Exception\DeleteLaunchpadButtonServiceUnavailableException($serializer->deserialize($body, 'Bitly\Model\TemporarilyUnavailable', 'json'), $response);
        }
    }

    public function getAuthenticationScopes(): array
    {
        return ['bearerAuth'];
    }
}
