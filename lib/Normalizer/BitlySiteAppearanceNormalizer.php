<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Normalizer;

use Bitly\Runtime\Normalizer\CheckArray;
use Bitly\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class BitlySiteAppearanceNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;

    public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
    {
        return $type === \Bitly\Model\BitlySiteAppearance::class;
    }

    public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
    {
        return is_object($data) && get_class($data) === \Bitly\Model\BitlySiteAppearance::class;
    }

    public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \Bitly\Model\BitlySiteAppearance();
        if (\array_key_exists('hide_bitly_logo', $data) && \is_int($data['hide_bitly_logo'])) {
            $data['hide_bitly_logo'] = (bool) $data['hide_bitly_logo'];
        }
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('layout_v2', $data)) {
            $object->setLayoutV2($data['layout_v2']);
            unset($data['layout_v2']);
        }
        if (\array_key_exists('header_appearance', $data)) {
            $object->setHeaderAppearance($this->denormalizer->denormalize($data['header_appearance'], \Bitly\Model\BitlySiteHeaderAppearance::class, 'json', $context));
            unset($data['header_appearance']);
        }
        if (\array_key_exists('theme_id', $data)) {
            $object->setThemeId($data['theme_id']);
            unset($data['theme_id']);
        }
        if (\array_key_exists('hide_bitly_logo', $data)) {
            $object->setHideBitlyLogo($data['hide_bitly_logo']);
            unset($data['hide_bitly_logo']);
        }
        if (\array_key_exists('layout', $data)) {
            $object->setLayout($data['layout']);
            unset($data['layout']);
        }
        if (\array_key_exists('font', $data)) {
            $object->setFont($data['font']);
            unset($data['font']);
        }
        if (\array_key_exists('style_preference', $data)) {
            $object->setStylePreference($data['style_preference']);
            unset($data['style_preference']);
        }
        if (\array_key_exists('background_color', $data)) {
            $object->setBackgroundColor($data['background_color']);
            unset($data['background_color']);
        }
        if (\array_key_exists('bottom_background_color', $data)) {
            $object->setBottomBackgroundColor($data['bottom_background_color']);
            unset($data['bottom_background_color']);
        }
        if (\array_key_exists('text_color', $data)) {
            $object->setTextColor($data['text_color']);
            unset($data['text_color']);
        }
        if (\array_key_exists('description_color', $data)) {
            $object->setDescriptionColor($data['description_color']);
            unset($data['description_color']);
        }
        if (\array_key_exists('background_preference', $data)) {
            $object->setBackgroundPreference($data['background_preference']);
            unset($data['background_preference']);
        }
        if (\array_key_exists('background_image_alignment', $data)) {
            $object->setBackgroundImageAlignment($data['background_image_alignment']);
            unset($data['background_image_alignment']);
        }
        if (\array_key_exists('background_image_url', $data)) {
            $object->setBackgroundImageUrl($data['background_image_url']);
            unset($data['background_image_url']);
        }
        if (\array_key_exists('background_image_guid', $data)) {
            $object->setBackgroundImageGuid($data['background_image_guid']);
            unset($data['background_image_guid']);
        }
        if (\array_key_exists('avatar_image_url', $data)) {
            $object->setAvatarImageUrl($data['avatar_image_url']);
            unset($data['avatar_image_url']);
        }
        if (\array_key_exists('avatar_image_guid', $data)) {
            $object->setAvatarImageGuid($data['avatar_image_guid']);
            unset($data['avatar_image_guid']);
        }
        if (\array_key_exists('default_button_background_color', $data)) {
            $object->setDefaultButtonBackgroundColor($data['default_button_background_color']);
            unset($data['default_button_background_color']);
        }
        if (\array_key_exists('default_button_text_color', $data)) {
            $object->setDefaultButtonTextColor($data['default_button_text_color']);
            unset($data['default_button_text_color']);
        }
        if (\array_key_exists('default_button_shape', $data)) {
            $object->setDefaultButtonShape($data['default_button_shape']);
            unset($data['default_button_shape']);
        }
        if (\array_key_exists('default_button_shadow', $data)) {
            $object->setDefaultButtonShadow($data['default_button_shadow']);
            unset($data['default_button_shadow']);
        }
        if (\array_key_exists('default_social_icon_color', $data)) {
            $object->setDefaultSocialIconColor($data['default_social_icon_color']);
            unset($data['default_social_icon_color']);
        }
        if (\array_key_exists('default_social_icon_layout', $data)) {
            $object->setDefaultSocialIconLayout($data['default_social_icon_layout']);
            unset($data['default_social_icon_layout']);
        }
        if (\array_key_exists('default_social_icon_position', $data)) {
            $object->setDefaultSocialIconPosition($data['default_social_icon_position']);
            unset($data['default_social_icon_position']);
        }
        foreach ($data as $key => $value) {
            if (preg_match('/.*/', (string) $key)) {
                $object[$key] = $value;
            }
        }

        return $object;
    }

    public function normalize(mixed $data, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
    {
        $dataArray = [];
        if ($data->isInitialized('layoutV2') && null !== $data->getLayoutV2()) {
            $dataArray['layout_v2'] = $data->getLayoutV2();
        }
        if ($data->isInitialized('headerAppearance') && null !== $data->getHeaderAppearance()) {
            $dataArray['header_appearance'] = $this->normalizer->normalize($data->getHeaderAppearance(), 'json', $context);
        }
        if ($data->isInitialized('themeId') && null !== $data->getThemeId()) {
            $dataArray['theme_id'] = $data->getThemeId();
        }
        if ($data->isInitialized('hideBitlyLogo') && null !== $data->getHideBitlyLogo()) {
            $dataArray['hide_bitly_logo'] = $data->getHideBitlyLogo();
        }
        if ($data->isInitialized('layout') && null !== $data->getLayout()) {
            $dataArray['layout'] = $data->getLayout();
        }
        if ($data->isInitialized('font') && null !== $data->getFont()) {
            $dataArray['font'] = $data->getFont();
        }
        if ($data->isInitialized('stylePreference') && null !== $data->getStylePreference()) {
            $dataArray['style_preference'] = $data->getStylePreference();
        }
        if ($data->isInitialized('backgroundColor') && null !== $data->getBackgroundColor()) {
            $dataArray['background_color'] = $data->getBackgroundColor();
        }
        if ($data->isInitialized('bottomBackgroundColor') && null !== $data->getBottomBackgroundColor()) {
            $dataArray['bottom_background_color'] = $data->getBottomBackgroundColor();
        }
        if ($data->isInitialized('textColor') && null !== $data->getTextColor()) {
            $dataArray['text_color'] = $data->getTextColor();
        }
        if ($data->isInitialized('descriptionColor') && null !== $data->getDescriptionColor()) {
            $dataArray['description_color'] = $data->getDescriptionColor();
        }
        if ($data->isInitialized('backgroundPreference') && null !== $data->getBackgroundPreference()) {
            $dataArray['background_preference'] = $data->getBackgroundPreference();
        }
        if ($data->isInitialized('backgroundImageAlignment') && null !== $data->getBackgroundImageAlignment()) {
            $dataArray['background_image_alignment'] = $data->getBackgroundImageAlignment();
        }
        if ($data->isInitialized('backgroundImageUrl') && null !== $data->getBackgroundImageUrl()) {
            $dataArray['background_image_url'] = $data->getBackgroundImageUrl();
        }
        if ($data->isInitialized('backgroundImageGuid') && null !== $data->getBackgroundImageGuid()) {
            $dataArray['background_image_guid'] = $data->getBackgroundImageGuid();
        }
        if ($data->isInitialized('avatarImageUrl') && null !== $data->getAvatarImageUrl()) {
            $dataArray['avatar_image_url'] = $data->getAvatarImageUrl();
        }
        if ($data->isInitialized('avatarImageGuid') && null !== $data->getAvatarImageGuid()) {
            $dataArray['avatar_image_guid'] = $data->getAvatarImageGuid();
        }
        if ($data->isInitialized('defaultButtonBackgroundColor') && null !== $data->getDefaultButtonBackgroundColor()) {
            $dataArray['default_button_background_color'] = $data->getDefaultButtonBackgroundColor();
        }
        if ($data->isInitialized('defaultButtonTextColor') && null !== $data->getDefaultButtonTextColor()) {
            $dataArray['default_button_text_color'] = $data->getDefaultButtonTextColor();
        }
        if ($data->isInitialized('defaultButtonShape') && null !== $data->getDefaultButtonShape()) {
            $dataArray['default_button_shape'] = $data->getDefaultButtonShape();
        }
        if ($data->isInitialized('defaultButtonShadow') && null !== $data->getDefaultButtonShadow()) {
            $dataArray['default_button_shadow'] = $data->getDefaultButtonShadow();
        }
        if ($data->isInitialized('defaultSocialIconColor') && null !== $data->getDefaultSocialIconColor()) {
            $dataArray['default_social_icon_color'] = $data->getDefaultSocialIconColor();
        }
        if ($data->isInitialized('defaultSocialIconLayout') && null !== $data->getDefaultSocialIconLayout()) {
            $dataArray['default_social_icon_layout'] = $data->getDefaultSocialIconLayout();
        }
        if ($data->isInitialized('defaultSocialIconPosition') && null !== $data->getDefaultSocialIconPosition()) {
            $dataArray['default_social_icon_position'] = $data->getDefaultSocialIconPosition();
        }
        foreach ($data as $key => $value) {
            if (preg_match('/.*/', (string) $key)) {
                $dataArray[$key] = $value;
            }
        }

        return $dataArray;
    }

    public function getSupportedTypes(?string $format = null): array
    {
        return [\Bitly\Model\BitlySiteAppearance::class => false];
    }
}
