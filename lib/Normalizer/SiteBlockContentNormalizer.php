<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Normalizer;

use Bitly\Runtime\Normalizer\CheckArray;
use Bitly\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SiteBlockContentNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;

    public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
    {
        return $type === \Bitly\Model\SiteBlockContent::class;
    }

    public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
    {
        return is_object($data) && get_class($data) === \Bitly\Model\SiteBlockContent::class;
    }

    public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \Bitly\Model\SiteBlockContent();
        if (\array_key_exists('download_enabled', $data) && \is_int($data['download_enabled'])) {
            $data['download_enabled'] = (bool) $data['download_enabled'];
        }
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('link_title', $data)) {
            $object->setLinkTitle($data['link_title']);
            unset($data['link_title']);
        }
        if (\array_key_exists('description', $data)) {
            $object->setDescription($data['description']);
            unset($data['description']);
        }
        if (\array_key_exists('bitlink_id', $data)) {
            $object->setBitlinkId($data['bitlink_id']);
            unset($data['bitlink_id']);
        }
        if (\array_key_exists('image_guid', $data)) {
            $object->setImageGuid($data['image_guid']);
            unset($data['image_guid']);
        }
        if (\array_key_exists('image_url', $data)) {
            $object->setImageUrl($data['image_url']);
            unset($data['image_url']);
        }
        if (\array_key_exists('aspect_ratio', $data)) {
            $object->setAspectRatio($data['aspect_ratio']);
            unset($data['aspect_ratio']);
        }
        if (\array_key_exists('thumbnail_url', $data)) {
            $object->setThumbnailUrl($data['thumbnail_url']);
            unset($data['thumbnail_url']);
        }
        if (\array_key_exists('channel', $data)) {
            $object->setChannel($data['channel']);
            unset($data['channel']);
        }
        if (\array_key_exists('channel_url', $data)) {
            $object->setChannelUrl($data['channel_url']);
            unset($data['channel_url']);
        }
        if (\array_key_exists('digital_business_card_id', $data)) {
            $object->setDigitalBusinessCardId($data['digital_business_card_id']);
            unset($data['digital_business_card_id']);
        }
        if (\array_key_exists('layout', $data)) {
            $object->setLayout($data['layout']);
            unset($data['layout']);
        }
        if (\array_key_exists('first_name', $data)) {
            $object->setFirstName($data['first_name']);
            unset($data['first_name']);
        }
        if (\array_key_exists('last_name', $data)) {
            $object->setLastName($data['last_name']);
            unset($data['last_name']);
        }
        if (\array_key_exists('job_title', $data)) {
            $object->setJobTitle($data['job_title']);
            unset($data['job_title']);
        }
        if (\array_key_exists('company', $data)) {
            $object->setCompany($data['company']);
            unset($data['company']);
        }
        if (\array_key_exists('pronouns', $data)) {
            $object->setPronouns($data['pronouns']);
            unset($data['pronouns']);
        }
        if (\array_key_exists('contacts', $data)) {
            $values = [];
            foreach ($data['contacts'] as $value) {
                $values[] = $this->denormalizer->denormalize($value, \Bitly\Model\DigitalBusinessCardContact::class, 'json', $context);
            }
            $object->setContacts($values);
            unset($data['contacts']);
        }
        if (\array_key_exists('download_enabled', $data)) {
            $object->setDownloadEnabled($data['download_enabled']);
            unset($data['download_enabled']);
        }
        foreach ($data as $key => $value_1) {
            if (preg_match('/.*/', (string) $key)) {
                $object[$key] = $value_1;
            }
        }

        return $object;
    }

    public function normalize(mixed $data, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
    {
        $dataArray = [];
        if ($data->isInitialized('linkTitle') && null !== $data->getLinkTitle()) {
            $dataArray['link_title'] = $data->getLinkTitle();
        }
        if ($data->isInitialized('description') && null !== $data->getDescription()) {
            $dataArray['description'] = $data->getDescription();
        }
        if ($data->isInitialized('bitlinkId') && null !== $data->getBitlinkId()) {
            $dataArray['bitlink_id'] = $data->getBitlinkId();
        }
        if ($data->isInitialized('imageGuid') && null !== $data->getImageGuid()) {
            $dataArray['image_guid'] = $data->getImageGuid();
        }
        if ($data->isInitialized('imageUrl') && null !== $data->getImageUrl()) {
            $dataArray['image_url'] = $data->getImageUrl();
        }
        if ($data->isInitialized('aspectRatio') && null !== $data->getAspectRatio()) {
            $dataArray['aspect_ratio'] = $data->getAspectRatio();
        }
        if ($data->isInitialized('thumbnailUrl') && null !== $data->getThumbnailUrl()) {
            $dataArray['thumbnail_url'] = $data->getThumbnailUrl();
        }
        if ($data->isInitialized('channel') && null !== $data->getChannel()) {
            $dataArray['channel'] = $data->getChannel();
        }
        if ($data->isInitialized('channelUrl') && null !== $data->getChannelUrl()) {
            $dataArray['channel_url'] = $data->getChannelUrl();
        }
        if ($data->isInitialized('digitalBusinessCardId') && null !== $data->getDigitalBusinessCardId()) {
            $dataArray['digital_business_card_id'] = $data->getDigitalBusinessCardId();
        }
        if ($data->isInitialized('layout') && null !== $data->getLayout()) {
            $dataArray['layout'] = $data->getLayout();
        }
        if ($data->isInitialized('firstName') && null !== $data->getFirstName()) {
            $dataArray['first_name'] = $data->getFirstName();
        }
        if ($data->isInitialized('lastName') && null !== $data->getLastName()) {
            $dataArray['last_name'] = $data->getLastName();
        }
        if ($data->isInitialized('jobTitle') && null !== $data->getJobTitle()) {
            $dataArray['job_title'] = $data->getJobTitle();
        }
        if ($data->isInitialized('company') && null !== $data->getCompany()) {
            $dataArray['company'] = $data->getCompany();
        }
        if ($data->isInitialized('pronouns') && null !== $data->getPronouns()) {
            $dataArray['pronouns'] = $data->getPronouns();
        }
        if ($data->isInitialized('contacts') && null !== $data->getContacts()) {
            $values = [];
            foreach ($data->getContacts() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $dataArray['contacts'] = $values;
        }
        if ($data->isInitialized('downloadEnabled') && null !== $data->getDownloadEnabled()) {
            $dataArray['download_enabled'] = $data->getDownloadEnabled();
        }
        foreach ($data as $key => $value_1) {
            if (preg_match('/.*/', (string) $key)) {
                $dataArray[$key] = $value_1;
            }
        }

        return $dataArray;
    }

    public function getSupportedTypes(?string $format = null): array
    {
        return [\Bitly\Model\SiteBlockContent::class => false];
    }
}
