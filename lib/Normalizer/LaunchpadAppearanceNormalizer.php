<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bitly\Normalizer;

use Bitly\Runtime\Normalizer\CheckArray;
use Bitly\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class LaunchpadAppearanceNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;

    public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
    {
        return $type === \Bitly\Model\LaunchpadAppearance::class;
    }

    public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
    {
        return is_object($data) && get_class($data) === \Bitly\Model\LaunchpadAppearance::class;
    }

    public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \Bitly\Model\LaunchpadAppearance();
        if (\array_key_exists('hide_bitly_logo', $data) && \is_int($data['hide_bitly_logo'])) {
            $data['hide_bitly_logo'] = (bool) $data['hide_bitly_logo'];
        }
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('layout_v2', $data)) {
            $object->setLayoutV2($data['layout_v2']);
            unset($data['layout_v2']);
        }
        if (\array_key_exists('header_appearance', $data)) {
            $object->setHeaderAppearance($this->denormalizer->denormalize($data['header_appearance'], \Bitly\Model\BitlySiteHeaderAppearance::class, 'json', $context));
            unset($data['header_appearance']);
        }
        if (\array_key_exists('launchpad_id', $data)) {
            $object->setLaunchpadId($data['launchpad_id']);
            unset($data['launchpad_id']);
        }
        if (\array_key_exists('background', $data)) {
            $object->setBackground($data['background']);
            unset($data['background']);
        }
        if (\array_key_exists('bottom_background', $data)) {
            $object->setBottomBackground($data['bottom_background']);
            unset($data['bottom_background']);
        }
        if (\array_key_exists('launchpad_text_color', $data)) {
            $object->setLaunchpadTextColor($data['launchpad_text_color']);
            unset($data['launchpad_text_color']);
        }
        if (\array_key_exists('description_color', $data)) {
            $object->setDescriptionColor($data['description_color']);
            unset($data['description_color']);
        }
        if (\array_key_exists('avatar_image_url', $data)) {
            $object->setAvatarImageUrl($data['avatar_image_url']);
            unset($data['avatar_image_url']);
        }
        if (\array_key_exists('background_image_url', $data)) {
            $object->setBackgroundImageUrl($data['background_image_url']);
            unset($data['background_image_url']);
        }
        if (\array_key_exists('avatar_upload_image', $data)) {
            $object->setAvatarUploadImage($data['avatar_upload_image']);
            unset($data['avatar_upload_image']);
        }
        if (\array_key_exists('background_upload_image', $data)) {
            $object->setBackgroundUploadImage($data['background_upload_image']);
            unset($data['background_upload_image']);
        }
        if (\array_key_exists('font', $data)) {
            $object->setFont($data['font']);
            unset($data['font']);
        }
        if (\array_key_exists('display_name', $data)) {
            $object->setDisplayName($data['display_name']);
            unset($data['display_name']);
        }
        if (\array_key_exists('description', $data)) {
            $object->setDescription($data['description']);
            unset($data['description']);
        }
        if (\array_key_exists('hide_bitly_logo', $data)) {
            $object->setHideBitlyLogo($data['hide_bitly_logo']);
            unset($data['hide_bitly_logo']);
        }
        if (\array_key_exists('theme_id', $data)) {
            $object->setThemeId($data['theme_id']);
            unset($data['theme_id']);
        }
        if (\array_key_exists('layout', $data)) {
            $object->setLayout($data['layout']);
            unset($data['layout']);
        }
        if (\array_key_exists('button_appearance', $data)) {
            $object->setButtonAppearance($this->denormalizer->denormalize($data['button_appearance'], \Bitly\Model\LaunchpadButtonAppearance::class, 'json', $context));
            unset($data['button_appearance']);
        }
        if (\array_key_exists('style_preference', $data)) {
            $object->setStylePreference($data['style_preference']);
            unset($data['style_preference']);
        }
        if (\array_key_exists('background_image_alignment', $data)) {
            $object->setBackgroundImageAlignment($data['background_image_alignment']);
            unset($data['background_image_alignment']);
        }
        if (\array_key_exists('social_icon_color', $data)) {
            $object->setSocialIconColor($data['social_icon_color']);
            unset($data['social_icon_color']);
        }
        if (\array_key_exists('social_icon_layout_position', $data)) {
            $object->setSocialIconLayoutPosition($data['social_icon_layout_position']);
            unset($data['social_icon_layout_position']);
        }
        if (\array_key_exists('social_icon_position', $data)) {
            $object->setSocialIconPosition($data['social_icon_position']);
            unset($data['social_icon_position']);
        }
        foreach ($data as $key => $value) {
            if (preg_match('/.*/', (string) $key)) {
                $object[$key] = $value;
            }
        }

        return $object;
    }

    public function normalize(mixed $data, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
    {
        $dataArray = [];
        if ($data->isInitialized('layoutV2') && null !== $data->getLayoutV2()) {
            $dataArray['layout_v2'] = $data->getLayoutV2();
        }
        if ($data->isInitialized('headerAppearance') && null !== $data->getHeaderAppearance()) {
            $dataArray['header_appearance'] = $this->normalizer->normalize($data->getHeaderAppearance(), 'json', $context);
        }
        if ($data->isInitialized('launchpadId') && null !== $data->getLaunchpadId()) {
            $dataArray['launchpad_id'] = $data->getLaunchpadId();
        }
        if ($data->isInitialized('background') && null !== $data->getBackground()) {
            $dataArray['background'] = $data->getBackground();
        }
        if ($data->isInitialized('bottomBackground') && null !== $data->getBottomBackground()) {
            $dataArray['bottom_background'] = $data->getBottomBackground();
        }
        if ($data->isInitialized('launchpadTextColor') && null !== $data->getLaunchpadTextColor()) {
            $dataArray['launchpad_text_color'] = $data->getLaunchpadTextColor();
        }
        if ($data->isInitialized('descriptionColor') && null !== $data->getDescriptionColor()) {
            $dataArray['description_color'] = $data->getDescriptionColor();
        }
        if ($data->isInitialized('avatarImageUrl') && null !== $data->getAvatarImageUrl()) {
            $dataArray['avatar_image_url'] = $data->getAvatarImageUrl();
        }
        if ($data->isInitialized('backgroundImageUrl') && null !== $data->getBackgroundImageUrl()) {
            $dataArray['background_image_url'] = $data->getBackgroundImageUrl();
        }
        if ($data->isInitialized('avatarUploadImage') && null !== $data->getAvatarUploadImage()) {
            $dataArray['avatar_upload_image'] = $data->getAvatarUploadImage();
        }
        if ($data->isInitialized('backgroundUploadImage') && null !== $data->getBackgroundUploadImage()) {
            $dataArray['background_upload_image'] = $data->getBackgroundUploadImage();
        }
        if ($data->isInitialized('font') && null !== $data->getFont()) {
            $dataArray['font'] = $data->getFont();
        }
        if ($data->isInitialized('displayName') && null !== $data->getDisplayName()) {
            $dataArray['display_name'] = $data->getDisplayName();
        }
        if ($data->isInitialized('description') && null !== $data->getDescription()) {
            $dataArray['description'] = $data->getDescription();
        }
        $dataArray['hide_bitly_logo'] = $data->getHideBitlyLogo();
        if ($data->isInitialized('themeId') && null !== $data->getThemeId()) {
            $dataArray['theme_id'] = $data->getThemeId();
        }
        if ($data->isInitialized('layout') && null !== $data->getLayout()) {
            $dataArray['layout'] = $data->getLayout();
        }
        if ($data->isInitialized('buttonAppearance') && null !== $data->getButtonAppearance()) {
            $dataArray['button_appearance'] = $this->normalizer->normalize($data->getButtonAppearance(), 'json', $context);
        }
        if ($data->isInitialized('stylePreference') && null !== $data->getStylePreference()) {
            $dataArray['style_preference'] = $data->getStylePreference();
        }
        if ($data->isInitialized('backgroundImageAlignment') && null !== $data->getBackgroundImageAlignment()) {
            $dataArray['background_image_alignment'] = $data->getBackgroundImageAlignment();
        }
        if ($data->isInitialized('socialIconColor') && null !== $data->getSocialIconColor()) {
            $dataArray['social_icon_color'] = $data->getSocialIconColor();
        }
        if ($data->isInitialized('socialIconLayoutPosition') && null !== $data->getSocialIconLayoutPosition()) {
            $dataArray['social_icon_layout_position'] = $data->getSocialIconLayoutPosition();
        }
        if ($data->isInitialized('socialIconPosition') && null !== $data->getSocialIconPosition()) {
            $dataArray['social_icon_position'] = $data->getSocialIconPosition();
        }
        foreach ($data as $key => $value) {
            if (preg_match('/.*/', (string) $key)) {
                $dataArray[$key] = $value;
            }
        }

        return $dataArray;
    }

    public function getSupportedTypes(?string $format = null): array
    {
        return [\Bitly\Model\LaunchpadAppearance::class => false];
    }
}
